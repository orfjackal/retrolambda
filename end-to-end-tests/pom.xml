<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.orfjackal.retrolambda</groupId>
        <artifactId>parent</artifactId>
        <version>2.5.8-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>end-to-end-tests</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <!-- We must use an older version of the library,  so that we can run our tests on Java 5 -->
            <version>11.0.2</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-tree</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.bcel</groupId>
            <artifactId>bcel</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- See net.orfjackal.retrolambda.test.ClasspathTest#ignores_classes_in_explicit_classpath_that_are_under_the_java_package -->
        <dependency>
            <groupId>net.orfjackal.retrolambda</groupId>
            <artifactId>java-lang-dummies</artifactId>
            <version>1</version>
            <scope>system</scope>
            <systemPath>${basedir}/src/test/lib/java-lang-dummies.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.streamsupport</groupId>
            <artifactId>streamsupport</artifactId>
            <version>1.6.3</version>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>

            <!-- Don't deploy the tests to Maven Central -->

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Run tests using Java 7 (but compile with Java 8) -->

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Process our byte codes to make them run on Java 7 -->
            <plugin>
                <groupId>net.orfjackal.retrolambda</groupId>
                <artifactId>retrolambda-maven-plugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process-main</goal>
                            <goal>process-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <target>${testBytecodeTarget}</target>
                    <defaultMethods>${testDefaultMethods}</defaultMethods>
                    <fork>${testFork}</fork>
                    <javacHacks>true</javacHacks>
                    <apiMappings>
                        <mapping>java7-guava</mapping>
                        <mapping>streamsupport</mapping>
                    </apiMappings>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>noDefaultMethods</id>
            <properties>
                <testDefaultMethods>false</testDefaultMethods>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <testExcludes>
                                <pattern>**/DefaultMethodsTest.java</pattern>
                                <pattern>**/InterfaceStaticMethodsTest.java</pattern>
                            </testExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>noToolchain</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-toolchains-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>eclipse</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <compilerId>eclipse</compilerId>
                            <!-- TODO: check compatibility with the Eclipse JDT compiler (update release scripts) -->
                            <!-- FIXME: we are unable to tell the Eclipse compiler to use Java 1.8
                                It just fails with the warning
                                "Unknown version '1.8', no version setting will be given to the compiler."
                                because the plugin is only aware of Java 7 and below.
                                Also we failed at giving custom compiler arguments, after which we
                                might have been able to make it use a newer Eclipse compiler) -->
                            <!--
                            <compilerArguments>
                                <org.eclipse.jdt.core.compiler.source>1.5</org.eclipse.jdt.core.compiler.source>
                                <org.eclipse.jdt.core.compiler.codegen.targetPlatform>1.5</org.eclipse.jdt.core.compiler.codegen.targetPlatform>
                            </compilerArguments>
                            -->
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.plexus</groupId>
                                <artifactId>plexus-compiler-eclipse</artifactId>
                                <version>2.3</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
